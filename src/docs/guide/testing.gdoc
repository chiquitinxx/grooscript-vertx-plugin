The plugin adds a new testing phase, @phantomjs@, you can add new tests to @test/phantomjs@. Then you can do
functional tests using PhantomJsTest annotation, that comes with GrooScript. That annotation runs a PhantomJs test,
evaluating then code inside the method (converted jo javascript). You need "PhantomJs":http://phantomjs.org installed
in your system and setup path in your Config.groovy

{code}
phantomjs.path = '/anyPath/phantomjs'
{code}

This tests run better extending GroovyTestCase, and will run after test application is up.
You have to put complete url of your test environment.

{code}
import org.grooscript.asts.PhantomJsTest

class PhantomJsTests extends GroovyTestCase {

    @PhantomJsTest(url='http://localhost:8080/grooscript-vertx/main/test')
    void testDefaultController() {
        def title = $("title")
        assert title[0].text=='Title Test',"Title is ${title[0].text}"
    }
}
{code}

If you use in Spock, then annotate a private method, and then use from your Spock test.
Spock @where:@ clause not working.