You can put your Groovy code in gsp's using [code|tags] tag. You can define a file or put Groovy code inside the tag.
If you put Groovy code inside, then maybe Grails can try use it, for example if you put '${something}'.
If your code use other sources of your application, then that dependency will be convented too.
The dependency of @grooscript.js@ is added with resources plugin. A little cleanup is done in generated code, if your code
references something that don't find in the context, then is referencing directly, we hope will be available in js context.
The generated javascript code is inserted in the page in a r.script tag.

Generated code is prepared to run with other generated code, not for be called from javascript. For example if you create a
function that expects a groovy map, then you can have problems if a javascript object is passed. There is no problem with
strings or numbers, but if you get a javascript array or object, then no groovy map and list functions. Also if you convert
an object, and you want to create in your javascript code, @var item = new Item();@ doesn't work, you have to do
@var item = Item();@. All goes smooth if you do all in Groovy, for example converting a script like:

{code}
<grooscript:code>
    def sing = { name ->
        console.log 'Singing...' + name
    }

    def doSomething = { mapOfClosures ->
        mapOfClosures.each { key, value ->
            value(key)
        }
    }

    $(document).ready doSomething([groovy: sing, grails: sing, grooscript: sing])
<grooscript:code>
{code}

Also remember you can use [conversion daemon|guide:conversionDaemon], to generate your .js files from your groovy
sources, and use in your gsps.

Not all Groovy is supported, in GrooScript "web":http://grooscript.org/ you can get more info. Enjoy!